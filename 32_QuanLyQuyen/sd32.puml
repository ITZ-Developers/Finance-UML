@startuml SQ
autonumber
title SD32. Quản lý quyền
actor "Actor" as actor
boundary "ManageRoleView" as manageView
control "RoleController" as controller
entity "RoleRepository" as model
database "Database" as database

' Main Flow
actor -> manageView : Access "Manage Roles"
manageView -> controller : Request role list
activate controller
controller -> model : Inject repository
model -> database : SELECT * FROM roles
activate database
database --> model : Return role list
deactivate database
model --> controller : Return list
deactivate model
controller --> manageView : Render role list
deactivate controller

' Option TH1: Create Role
opt TH1. Người dùng tạo quyền
    actor -> manageView : Click "Create"
    manageView -> actor : Display create form
    actor -> manageView : Input role name, description, select permissions
    manageView -> controller : Submit create form
    activate controller
    controller -> model : Inject repository
    model -> database : INSERT INTO roles (name, description, permissions)
    activate database
    database --> model : Insert success
    deactivate database
    model --> controller : Notify success
    deactivate model
    controller --> manageView : Return success
    deactivate controller
    manageView -> actor : Notify "Role created successfully"
    manageView -> manageView : Refresh role list
end

' Option TH2: Edit Role
opt TH2. Người dùng chỉnh sửa quyền
    actor -> manageView : Click "Edit" on a specific role
    manageView -> controller : Request role details
    activate controller
    controller -> model : Inject repository
    model -> database : SELECT * FROM roles WHERE id=?
    activate database
    database --> model : Return role details
    deactivate database
    model --> controller : Return details
    deactivate model
    controller --> manageView : Render edit form
    deactivate controller
    actor -> manageView : Input updated role name, description, select permissions
    manageView -> controller : Submit edit form
    activate controller
    controller -> model : Inject repository
    model -> database : UPDATE roles SET name=?, description=?, permissions=? WHERE id=?
    activate database
    database --> model : Update success
    deactivate database
    model --> controller : Notify success
    deactivate model
    controller --> manageView : Return success
    deactivate controller
    manageView -> actor : Notify "Role updated successfully"
    manageView -> manageView : Refresh role list
end

' Alternative Flow: Back Navigation
alt User selects "Back"
    actor -> manageView : Click "Back"
    manageView -> actor : Navigate to previous screen
end

@enduml
